//"use strict";function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}var playing=!0,timer=function(){return setInterval(function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1},1e3)},interval=timer(),minus=document.getElementById("minus"),plus=document.getElementById("plus"),heart=document.getElementById("heart"),pause=document.getElementById("pause"),commentForm=document.getElementsByTagName("form")[0];minus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b-1}),plus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1}),heart.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText),c=document.querySelector(".likes"),d=void 0;if([].concat(_toConsumableArray(c.children)).map(function(a){return parseInt(a.dataset.num)}).includes(b)){d=document.querySelector('[data-num="'+b+'"]');var e=parseInt(d.children[0].innerText);d.innerHTML=b+" has been liked <span>"+(e+1)+"</span> times"}else(d=document.createElement("li")).setAttribute("data-num",b),d.innerHTML=b+" has been liked <span>1</span> time",c.appendChild(d)}),pause.addEventListener("click",function(){playing?(playing=!1,clearInterval(interval),this.innerText="resume"):(playing=!0,interval=timer(),this.innerText="pause"),[].concat(_toConsumableArray(document.getElementsByTagName("button"))).forEach(function(a){"pause"!==a.id&&(a.disabled=!playing)})}),commentForm.addEventListener("submit",function(a){a.preventDefault();var b=this.children[0],c=b.value;b.value="";var d=document.querySelector(".comments"),e=document.createElement("p");e.innerText=c,d.appendChild(e)});
document.addEventListener('DOMContentLoaded', () => {
  // DOM elements
  const counter = document.getElementById('counter');
  const minusBtn = document.getElementById('minus');
  const plusBtn = document.getElementById('plus');
  const heartBtn = document.getElementById('heart');
  const pauseBtn = document.getElementById('pause');
  const likesList = document.querySelector('.likes');
  const commentForm = document.getElementById('comment-form');
  const commentInput = document.getElementById('comment-input');
  const commentsList = document.getElementById('list');

  // Variables
  let count = 0;
  let timer;
  let isPaused = false;
  let likes = {};

  // Start the timer
  startTimer();

  // Functions
  function startTimer() {
    timer = setInterval(() => {
      if (!isPaused) {
        count++;
        counter.textContent = count;
      }
    }, 1000);
  }

  function updateCounter(value) {
    count = value;
    counter.textContent = count;
  }

  function togglePause() {
    isPaused = !isPaused;
    
    if (isPaused) {
      clearInterval(timer);
      pauseBtn.textContent = 'resume';
      disableButtons(true);
    } else {
      startTimer();
      pauseBtn.textContent = 'pause';
      disableButtons(false);
    }
  }

  function disableButtons(disabled) {
    minusBtn.disabled = disabled;
    plusBtn.disabled = disabled;
    heartBtn.disabled = disabled;
  }

  function addLike() {
    const currentCount = counter.textContent;
    
    if (!likes[currentCount]) {
      likes[currentCount] = 1;
    } else {
      likes[currentCount]++;
    }
    
    updateLikesList();
  }

  function updateLikesList() {
    likesList.innerHTML = '';
    
    for (const [number, likeCount] of Object.entries(likes)) {
      const li = document.createElement('li');
      li.textContent = `${number} has been liked ${likeCount} times`;
      likesList.appendChild(li);
    }
  }

  function addComment(comment) {
    const commentElement = document.createElement('p');
    commentElement.textContent = comment;
    commentsList.appendChild(commentElement);
  }

  // Event listeners
  minusBtn.addEventListener('click', () => {
    updateCounter(count - 1);
  });

  plusBtn.addEventListener('click', () => {
    updateCounter(count + 1);
  });

  heartBtn.addEventListener('click', addLike);

  pauseBtn.addEventListener('click', togglePause);

  commentForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const comment = commentInput.value.trim();
    
    if (comment) {
      addComment(comment);
      commentInput.value = '';
    }
  });
});